<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd
                        http://www.springframework.org/schema/tx
                         http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
    <!--加这个，会扫描demo下的所有注解（自动注入）-->
    <context:component-scan base-package="com.wqt" />

    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:dbconfig.properties" />
    </bean>
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="${driver}" />
        <property name="url" value="${url}" />
        <property name="username" value="${username}" />
        <property name="password" value="${password}" />
    </bean>
    <!--&lt;!&ndash;设置数据源&ndash;&gt;-->
    <!--<bean id="dataSource"-->
    <!--class="org.springframework.jdbc.datasource.DriverManagerDataSource">-->
    <!--<property name="driverClassName" value="com.mysql.jdbc.Driver" />-->
    <!--<property name="url" value="jdbc:mysql://localhost:3306/sakila" />-->
    <!--<property name="username" value="root" />-->
    <!--<property name="password" value="root" />-->
    <!--</bean>-->

    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!-- 自动扫描mapping.xml文件 -->
        <property name="mapperLocations" value="classpath:mapper/*.xml"></property>
    </bean>
    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.wqt.mapper" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>
    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager" />
    <!--proxy-target-class="true"如果是·
    @Autowired
	private UserService userService;没有面向接口，
    不加这个会报错，默认false-->
    <!--<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true/>-->


    <!--事件bean测试-->


    <!--<bean id="cStartEventHandler"-->
    <!--class="cn.com.demo.test.CStartEventHandler"/>-->

    <!--<bean id="cStopEventHandler"-->
    <!--class="cn.com.demo.test.CStopEventHandler"/>-->
    <!--事件bean测试-->


    <!--事件bean测试 配置监听类 如果不配置这个bean 那就在这个类上加上注解@Service会自动注入-->
    <!--&lt;!&ndash;<bean id="serviceListener" class="cn.com.demo.event.ServiceListener">&ndash;&gt;-->
    <!--</bean>-->


    <!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
    <!--<bean id="mappingJacksonHttpMessageConverter"-->
    <!--class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">-->
    <!--<property name="supportedMediaTypes">-->
    <!--<list>-->
    <!--<value>text/html;charset=UTF-8</value>-->
    <!--</list>-->
    <!--</property>-->
    <!--</bean>-->

    <!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->

</beans>